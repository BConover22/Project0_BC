[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(early(addPluginSbtFile="""C:\Users\brand\AppData\Local\Temp\idea.sbt"""), None, None)
[debug] > Exec(addPluginSbtFile="""C:\Users\brand\AppData\Local\Temp\idea.sbt""", None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.6.1 (Oracle Corporation Java 17.0.2)
[debug]       Load.loadUnit: plugins took 781.9217ms
[debug]       Load.loadUnit: defsScala took 0.7559ms
[debug] [Loading] Scanning directory C:\Users\brand\.sbt\1.0\plugins
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\brand\.sbt\1.0\plugins, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 56.8075 ms
[debug]           Load.resolveProject(global-plugins) took 622.8899ms
[debug]         Load.loadTransitive: finalizeProject(Project(id global-plugins, base: C:\Users\brand\.sbt\1.0\plugins, plugins: List(<none>))) took 881.0312ms
[debug] [Loading] Done in C:\Users\brand\.sbt\1.0\plugins, returning: (global-plugins)
[debug]       Load.loadUnit: loadedProjectsRaw took 1077.0545ms
[debug]       Load.loadUnit: cleanEvalClasses took 0.6831ms
[debug]     Load.loadUnit(file:/C:/Users/brand/.sbt/1.0/plugins/, ...) took 1894.6738ms
[debug]   Load.apply: load took 8564.3918ms
[debug]   Load.apply: resolveProjects took 18.6787ms
[debug]   Load.apply: finalTransforms took 590.9869ms
[debug]   Load.apply: config.delegates took 46.2805ms
[debug]   Load.apply: Def.make(settings)... took 4382.8065ms
[debug]   Load.apply: structureIndex took 885.3937ms
[debug]   Load.apply: mkStreams took 4.8108ms
[info] loading global plugins from C:\Users\brand\.sbt\1.0\plugins
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Load.defaultLoad until apply took 102485.6722ms
[debug]           Load.loadUnit: plugins took 150.8ms
[debug]           Load.loadUnit: defsScala took 0.0055ms
[debug] [Loading] Scanning directory C:\Users\brand\IdeaProjects\Project0\project
[debug]             Load.loadUnit: mkEval took 42.5191ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\brand\IdeaProjects\Project0\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 5.2172 ms
[info] loading settings for project project0-build from idea.sbt ...
[debug]               Load.resolveProject(project0-build) took 37.161ms
[debug]             Load.loadTransitive: finalizeProject(Project(id project0-build, base: C:\Users\brand\IdeaProjects\Project0\project, plugins: List(<none>))) took 44.0763ms
[debug] [Loading] Done in C:\Users\brand\IdeaProjects\Project0\project, returning: (project0-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 17113.0181ms
[debug]           Load.loadUnit: cleanEvalClasses took 18.8521ms
[debug]         Load.loadUnit(file:/C:/Users/brand/IdeaProjects/Project0/project/, ...) took 17287.5979ms
[debug]       Load.apply: load took 17292.0456ms
[debug]       Load.apply: resolveProjects took 0.5858ms
[debug]       Load.apply: finalTransforms took 95.5817ms
[debug]       Load.apply: config.delegates took 1.5454ms
[debug]       Load.apply: Def.make(settings)... took 384.7198ms
[debug]       Load.apply: structureIndex took 120.9324ms
[debug]       Load.apply: mkStreams took 0.0051ms
[info] loading project definition from C:\Users\brand\IdeaProjects\Project0\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[warn] Unrecognized repository Scala Plugin Bundled Repository, ignoring it
[warn] Unrecognized repository Scala Plugin Bundled Repository, ignoring it
[debug]     Load.loadUnit: plugins took 57572.6008ms
[debug]     Load.loadUnit: defsScala took 0.0128ms
[debug] [Loading] Scanning directory C:\Users\brand\IdeaProjects\Project0
[debug]       Load.loadUnit: mkEval took 0.5944ms
[debug] [Loading] Found root project root w/ remaining 
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin)))
[debug] Clause(And(Set(Atom(sbt.plugins.CorePlugin), Atom(sbt.plugins.JvmPlugin))),Set(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.SemanticdbPlugin,org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin,sbt.plugins.JUnitXmlReportPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 5.6245 ms
[info] loading settings for project root from build.sbt ...
[debug]         Load.resolveProject(root) took 55.9694ms
[debug]       Load.loadTransitive: finalizeProject(Project(id root, base: C:\Users\brand\IdeaProjects\Project0, plugins: List(<none>))) took 66.5921ms
[debug] [Loading] Done in C:\Users\brand\IdeaProjects\Project0, returning: (root)
[debug]     Load.loadUnit: loadedProjectsRaw took 4945.1866ms
[debug]     Load.loadUnit: cleanEvalClasses took 307.8852ms
[debug]   Load.loadUnit(file:/C:/Users/brand/IdeaProjects/Project0/, ...) took 62827.637ms
[debug] Load.apply: load took 62831.2524ms
[debug] Load.apply: resolveProjects took 0.1659ms
[debug] Load.apply: finalTransforms took 192.5903ms
[debug] Load.apply: config.delegates took 0.6107ms
[debug] Load.apply: Def.make(settings)... took 465.1693ms
[debug] Load.apply: structureIndex took 154.7922ms
[debug] Load.apply: mkStreams took 0.0038ms
[info] set current project to untitled (in build file:/C:/Users/brand/IdeaProjects/Project0/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(; set ideaPort in Global := 64432 ; idea-shell, None, None)
[debug] > Exec(set ideaPort in Global := 64432, None, None)
[info] Defining Global / ideaPort
[info] The new value will be used by Compile / compile, Test / compile
[debug] Defining 
[debug] 	Global / ideaPort
[debug] 
[debug] The new value will be used by 
[debug] 	Compile / compile
[debug] 	Test / compile
[info] Reapplying settings...
[info] set current project to untitled (in build file:/C:/Users/brand/IdeaProjects/Project0/)
[debug] > Exec(idea-shell, None, None)
